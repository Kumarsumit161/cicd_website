name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:  # This allows manual triggering with inputs
    inputs:
      skip_tests:
        description: 'Skip running tests'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, sqlite, bcmath, curl, opcache, zip

    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-interaction

    - name: Set APP_KEY for testing environment
      run: |
        echo "APP_KEY=$(php -r 'echo base64_encode(random_bytes(32));')" >> .env.testing
        cat .env.testing  # Debug: print the contents of .env.testing to verify APP_KEY

    - name: Copy .env.testing to .env
      run: |
        cp .env.testing .env
        cat .env  # Debug: print the contents of .env after copying to ensure APP_KEY is there

    - name: Clear config cache
      run: |
        php artisan config:clear
        php artisan cache:clear

    - name: Run Tests
      if: ${{ github.event.inputs.skip_tests != 'true' }}  # Skip tests if input is 'true'
      run: |
        php artisan migrate --env=testing
        php artisan test --env=testing

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        ssh -o StrictHostKeyChecking=no -i private_key.pem $SERVER_USER@$SERVER_IP << 'EOF'
          cd /path/to/your/project
          git pull origin master
          composer install --no-dev --optimize-autoloader
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan queue:restart
        EOF

